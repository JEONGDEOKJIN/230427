// 🔷 '모듈' 

    // [필요성]
        // '하나의 파일 모든' 이 있어버리면? 
        // 협업도 힘들고, 수정도 힘들고, 유지보수도 힘듦.

        // 파일을 규칙에 맞게 나눌 수 있으면, 나누는게 좋아 ⭐⭐⭐ 

    // [의의]
        // 모듈화란, 하나의 큰 프로그램을 '작은 단위' 로 나눈 것
        // ⭐'특정한 기능'⭐을 할 수 있는 덩어리를 ⭐나누어놓은 것⭐

        // '특정한 기능'을 가진 '함수 또는 변수' 의 집합
    
    // [특징]
        // 자체로 하나의 프로그램임. 
        // 다른 프로그램의 부속품임. 
        // 파일 하나가 모듈 하나가 된다. (파일별로 모듈화 한다.)

    // [종류]
        // 1) Common JS 모듈
        // 2) ECMAScript 모듈

    

// 🔷 Common JS

    // [사용 방법]
        // '모듈이 될 파일' 과 '모듈을 불러와서 사용할 파일' 이 필요

    // [예시]
        // ❓❓❓ 변수명 처음이 대문자인 이유는? 

        // [선언❓]
        const BlockClass = [
            {
                name : '안녕',
                age : 1,
                comment : function() {
                    console.log(this.name + '이야')
                }
            }, {
                name : '안녕22222', 
                age : 1, 
                comment : function() {
                    console.log(this.name + "이여~")
                }
            }
        ]
        
        // [내보내기]
        module.exports = BlockClass;
            // 이 모듈에서 이제, 내보내는 것은, BlockClass 가 됨.



