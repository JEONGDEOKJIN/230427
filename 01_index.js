// 

// nodejs 의 Repl 
// 읽기, 해석(실행), 출력, 반복
    // '👉 이게 터미널 창에서 하는 과정이 읽기, 해석, 출력, 반복 이 됨
    // REPL(read, eval, print, loop) 은, '콘솔 환경' 에서 코드를 입력하면, 
    // 즉시 실행해서, 결과를 변환해주는 인터페이스 
    
    // node.js 의 코드를 테스트 하고, 실행할 수 있도록 해주는, 대화형 콘솔


// 이 모드로 들어가보자
    // 터미널 창에, 'node' 라고 써주면 > Repl 모드로 들어갔음 

// 레포 모드에서 test 코드 작성해보자 

const str = "hello nodejs";
console.log(str)
    // 출력된 값은 "hello nodejs" 이 나오고 
    // 함수 반환값이 그 다음에 출력되는데, 
    // 이 함수의 반환값은 없으니까 -> undefined
    // so, 첫 번째로 hello, 두 번째로 undefined ! 
    // ⭐ 전제로, 함수값을 return  ⭐

    // this 가 window 가 아니라 global? 
        // /자바스크립트로 브라우저 창을 만들고, 런타임 환경 
        // console.log 는 브라우저 창에서 쓰는 게 아님 
        // 동일 환경이지만, 실행되는 곳이 브라우저랑, node.js 랑 달라 
        // 그래서 this 는 노드에서 global 로 찍힘
        // 즉, 브라우저의 console.log와 노드 js 의 콘솔은 기능이 동일한거지, 같지 않음. 
        // 브라우저에서 this 의 전역객체가 window 였고, ⭐⭐⭐
        // node 런타임 환경에서는 this 의 전역 객체가 global ⭐⭐⭐  


    // 레포모드를 사용하다가 종료 하려면 
        // cntrl c 를 하면 된다. 



// 🔷 파일 실행 모드
    // 자바스크립트로 작성한 코드를 응용프로그램 처럼 실행시키고 싶으면? 
    // node로 파일을 실행해서, 응용프로그램으로 

    // 이걸 많이 사용하게 될 것! 

    // node 로 파일을 실행할 때는, node 구문 뒤에, 파일의 경로를, 작성해 주면 된다!⭐⭐⭐ 
    // node index.js
    
    // 그러면, hello hode 를 뱉는다. 
    // 잠깐 실행되고, 종료되는 응용프로그램을 만든 것. 
    // ⭐ 실행되면 > 종료! ⭐